---
/* Pure Astro markup; browser wiring lives in a small client script below */
---
<form class="stack" aria-label="Tax inputs">
  <div class="label"><span>Filing status</span></div>
  <select id="fs">
    <option value="single" selected>Single</option>
    <option value="married">Married</option>
  </select>

  <div class="label"><span>Income ($)</span></div>
  <input id="inc" type="number" value="60000" min="0" />

  <div class="label"><span>Homeowner?</span></div>
  <select id="ho">
    <option value="1" selected>Yes</option>
    <option value="0">No (renter)</option>
  </select>

  <div class="label"><span>Home value ($)</span></div>
  <input id="hv" type="number" value="300000" min="0" />

  <div class="grid">
    <div>
      <div class="label"><span>Miles/year</span></div>
      <input id="mi" type="number" value="12000" min="0" />
    </div>
    <div>
      <div class="label"><span>MPG</span></div>
      <input id="mpg" type="number" value="28" min="1" />
    </div>
  </div>

  <div class="grid">
    <div>
      <div class="label"><span>Spending share</span><span class="badge" id="ssb">60%</span></div>
      <input id="ss" type="range" min="0.2" max="0.95" step="0.01" value="0.60" />
    </div>
    <div>
      <div class="label"><span>Taxable share</span><span class="badge" id="tsb">55%</span></div>
      <input id="ts" type="range" min="0.2" max="0.95" step="0.01" value="0.55" />
    </div>
  </div>

  <details>
    <summary class="label">Optional excise</summary>
    <div class="grid">
      <div>
        <div class="label"><span>Cig packs/week</span></div>
        <input id="cig" type="number" value="0" min="0" step="0.1" />
      </div>
      <div>
        <div class="label"><span>Alcohol units/week</span></div>
        <input id="alc" type="number" value="0" min="0" step="1" />
      </div>
    </div>
  </details>

  <details>
    <summary class="label">Federal options</summary>
    <div class="grid">
      <div>
        <div class="label"><span>Include federal?</span></div>
        <select id="fed">
          <option value="0" selected>No</option>
          <option value="1">Yes</option>
        </select>
      </div>
      <div>
        <div class="label"><span>Long-term cap gains ($)</span></div>
        <input id="ltcg" type="number" value="0" min="0" step="1000" />
      </div>
    </div>
  </details>
</form>

<script type="module">
  const root = document.currentScript.parentElement;

  const q = (id) => root.querySelector('#'+id);
  const state = {
    filingStatus: 'single',
    income: 60000,
    homeowner: true,
    homeValue: 300000,
    miles: 12000,
    mpg: 28,
    spendingShare: 0.60,
    taxableShare: 0.55,
    cigPacksPerWeek: 0,
    alcoholUnitsPerWeek: 0,
    includeFederal: false,
    ltcg: 0
  };

  const fmtPct = (x)=> (x*100|0) + '%';
  const emit = () => window.dispatchEvent(new CustomEvent('t1:inputs', { detail: { ...state } }));

  q('fs').addEventListener('change', (e)=>{ state.filingStatus = e.target.value; emit(); });
  q('inc').addEventListener('input',  (e)=>{ state.income = +e.target.value || 0; emit(); });
  q('ho').addEventListener('change',  (e)=>{ state.homeowner = e.target.value === '1'; emit(); });
  q('hv').addEventListener('input',   (e)=>{ state.homeValue = +e.target.value || 0; emit(); });
  q('mi').addEventListener('input',   (e)=>{ state.miles = +e.target.value || 0; emit(); });
  q('mpg').addEventListener('input',  (e)=>{ state.mpg = +e.target.value || 1; emit(); });

  const ss = q('ss'), ts = q('ts');
  const ssb = q('ssb'), tsb = q('tsb');
  ss.addEventListener('input', (e)=>{ state.spendingShare = +e.target.value; ssb.textContent = fmtPct(state.spendingShare); emit(); });
  ts.addEventListener('input', (e)=>{ state.taxableShare  = +e.target.value; tsb.textContent = fmtPct(state.taxableShare); emit(); });

  q('cig').addEventListener('input',  (e)=>{ state.cigPacksPerWeek = +e.target.value || 0; emit(); });
  q('alc').addEventListener('input',  (e)=>{ state.alcoholUnitsPerWeek = +e.target.value || 0; emit(); });
  q('fed').addEventListener('change', (e)=>{ state.includeFederal = e.target.value === '1'; emit(); });
  q('ltcg').addEventListener('input', (e)=>{ state.ltcg = +e.target.value || 0; emit(); });

  // initial render
  emit();
</script>
